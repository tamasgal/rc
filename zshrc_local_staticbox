export PATH=$HOME/opt/bin:/var/lib/snapd/snap/bin:$PATH

setxkbmap -option ctrl:nocaps

alias vim=nvim
export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"
if command -v pyenv 1>/dev/null 2>&1; then
  eval "$(pyenv init -)"
fi

export PATH="$PATH:/home/tgal/.gem/ruby/2.5.0/bin"

function root5_env() {
    _CWD=$(pwd)
    cd $HOME/opt/root/v5-34-38
    source bin/thisroot.sh
    cd $_CWD
}

function root6_env() {
    _CWD=$(pwd)
    cd $HOME/opt/root/v6-14-06
    source bin/thisroot.sh
    cd $_CWD
}

function jpp_py2() {
    pyenv shell 2.7.15
    root5_env
    _CWD=$(pwd)
    cd $HOME/Dev/jpp
    source setenv.sh
    cd $_CWD
}

function jpp_py3() {
    pyenv shell 3.7.3
    root6_env
    _CWD=$(pwd)
    cd $HOME/Dev/jpp
    source setenv.sh
    cd $_CWD
}

# Singularity and Go
export GOPATH="${HOME}/go"
export PATH=${GOPATH}/bin:${PATH}

# Base16 Shell
BASE16_SHELL="$HOME/.config/base16-shell/"
[ -n "$PS1" ] && \
    [ -s "$BASE16_SHELL/profile_helper.sh" ] && \
        eval "$("$BASE16_SHELL/profile_helper.sh")"

ps cax | grep xautolock > /dev/null
if [ $? -eq 0 ]; then
else
    echo "Starting xautolock"
    nohup xautolock -time 10 -locker blurlock &
fi

ps cax | grep dwmstatusbar > /dev/null
if [ $? -eq 0 ]; then
else
    echo "Setting up dwm statusbar"
    nohup $HOME/opt/bin/dwmstatusbar &
fi

alias sps="cd /data/sps"

export RASPBUZZ_SOUNDS=$HOME/cloud/raspbuzz/small
export RASPBUZZ_DEV=/dev/sdd2
